description = 'presets for the detector position'
group = 'configdata'

# Assigns presets for the z position and x/y displacement of the detector for
# each selector preset.
#
# When you add a new detector z position, make sure to add a real offset as
# well in the DETECTOR_OFFSETS table below.

DETECTOR_PRESETS = {
    '5A': {
        '1.5m':    dict(z=1.5,  x=51.5,  y=429),
#       '1.6m':    dict(z=1.6,  x=51.5,  y=429),
#       '2m':      dict(z=2,    x=51.5,  y=429),
        '2.3m':    dict(z=2.3,  x=51.5,  y=429),
        '4m':      dict(z=4,    x=52.5,  y=429),
        '8m':      dict(z=8,    x=50.5,  y=427),
        '14m':     dict(z=14,   x=52,    y=426.5),
#       '17.5m LENSES': dict(z=17.5, x=35,  y=421.5),
        '20m':     dict(z=20,   x=50,    y=420.5),
#       '6m Hum':  dict(z=6,    x=-1.0,  y=7.0),
        '8m Tr':   dict(z=8,    x=50.5,  y=290),
        '4m Tr':   dict(z=4,    x=52.5,  y=290),
        '20m Tr':  dict(z=20,   x=50,    y=280),
        '20m GISANS': dict(z=20, x=50,   y=400.0),
#       '4m GISANS': dict(z=4,  x=52.5,  y=400),
    },
    '6A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
#       '4m':      dict(z=4,    x=52,  y=428.5),
#       '8m':      dict(z=8,    x=51,  y=427),
#       '14m':     dict(z=14,   x=52,  y=425),
#       '20m':     dict(z=20,   x=50,  y=415),
#       '4m Tr':   dict(z=4,    x=52,  y=290),
#       '8m Tr':   dict(z=8,    x=51,  y=290),
#       '20m Tr':  dict(z=20,   x=50,  y=280),
    },
    '7A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
        '4m':      dict(z=4,    x=52,  y=428.5),
        '8m':      dict(z=8,    x=51,  y=427),
        '14m':     dict(z=14,   x=52,  y=425),
        '20m':     dict(z=20,   x=50,  y=415),
#       '4m Tr':   dict(z=4,    x=52,  y=290),
        '8m Tr':   dict(z=8,    x=51,  y=290),
#       '18.3m C20 Lens': dict(z=18.3, x=52, y=425),
        '20m Tr':  dict(z=20,   x=50,   y=280),
    },
    '8A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
#       '4m':      dict(z=4,    x=52,  y=428.5),
#       '8m':      dict(z=8,    x=51,  y=427),
#       '14m':     dict(z=14,   x=52,  y=425),
#       '20m':     dict(z=20,   x=50,  y=415),
#       '4m Tr':   dict(z=4,    x=52,  y=290),
#       '8m Tr':   dict(z=8,    x=51,  y=290),
#       '20m Tr':  dict(z=20,   x=50,  y=280),
    },
    '10A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
        '4m':      dict(z=4,    x=52,  y=428),
        '8m':      dict(z=8,    x=52,  y=425),
        '14m':     dict(z=14,   x=51,  y=419),
        '20m':     dict(z=20,   x=48,  y=402),
#       '4m Tr':   dict(z=4,    x=52,  y=290),
        '8m Tr':   dict(z=8,    x=52,  y=290),
#       '12m':     dict(z=12,   x=51,  y=420),
#       '6.4m C20 Lens':  dict(z=6.4,  x=52, y=425),
#       '10.4m C14 Lens': dict(z=10.4, x=52, y=420),
        '20m Tr':  dict(z=20,   x=48,   y=260.0),
    },
    '11A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
#       '4m':      dict(z=4,    x=52,  y=428),
#       '20m':     dict(z=20,   x=48,  y=402),
#       '4m Tr':   dict(z=4,    x=52,  y=260),
#       '20m Tr':  dict(z=20,   x=48,  y=260.0),
    },
    '12A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
#       '4m':      dict(z=4,    x=52,  y=428),
#       '8m':      dict(z=8,    x=52,  y=425),
        '8m Tr':   dict(z=8,    x=52,  y=290),
#       '14m':     dict(z=14,   x=51,  y=419),
        '20m':     dict(z=20,   x=45,  y=390),
        '20m Tr':  dict(z=20,   x=45,  y=250),
    },
    '20A': {
        '1.5m':    dict(z=1.5,  x=52,  y=428.5),
#       '1.6m':    dict(z=1.6,  x=52,  y=428.5),
#       '2m':      dict(z=2,    x=52,  y=428.5),
        '2.3m':    dict(z=2.3,  x=52,  y=428.5),
#       '4m':      dict(z=4,    x=52,  y=428),
        '8m Tr':   dict(z=8,    x=52,  y=290),
        '20m':     dict(z=20,   x=43,  y=350.0),
        '20m Tr':  dict(z=20,   x=43,  y=200.0),
    },
}

# This offset is added to 20m + det_z to get the chopper-detector length
# for time-of-flight mode calculation.
#
# It varies with detector distance because the det_z value is not actually
# particularly accurate (accurate from August 2018).

DETECTOR_OFFSETS = {
   2:    2.21,
   2.3:  2.21,
   4:    2.21,
   8:    2.21,
   14:   2.21,
   20:   2.21,
   1.5:  2.21,
   1.6:  2.21,
   6:    2.21,
   18.3: 2.21,
   6.4:  2.21,
   10.4: 2.21,
   12:   2.21,
   17.5: 2.21,
   19.9: 2.21,
   # 2:    2.21,
   # 4:    2.218,
   # 8:    2.23,
   # 14:   2.248,
   # 18.3: 2.26,
   # 20:   2.266,
   # 1.5:  2.21,
    # Taken from a linear interpolation of the above measured values.
   # 6:    2.223,
   # 6.4:  2.225,
   # 10.4: 2.237,
   # 12:   2.24,
}
