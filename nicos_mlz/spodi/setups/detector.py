description = 'QMesyDAQ detector devices'

group = 'lowlevel'

nameservice = 'spodisrv.spodi.frm2'
caresspath = '/opt/caress'
toolpath = '/opt/caress'

# nethost = 'spodisrv.spodi.frm2'

tango_base = 'tango://spodictrl.spodi.frm2:10000/spodi/'

devices = dict(

    # mon1 = device('nicos.devices.vendor.qmesydaq.taco.Counter',
    #     description = 'QMesyDAQ Counter0',
    #     tacodevice = '//%s/test/qmesydaq/counter0' % nethost,
    #     type = 'monitor',
    # ),
    # mon2 = device('nicos.devices.vendor.qmesydaq.taco.Counter',
    #     description = 'QMesyDAQ Counter1',
    #     tacodevice = '//%s/test/qmesydaq/counter1' % nethost,
    #     type = 'monitor',
    # ),
    # timer = device('nicos.devices.vendor.qmesydaq.taco.Timer',
    #     description = 'QMesyDAQ Timer',
    #     tacodevice = '//%s/test/qmesydaq/timer' % nethost,
    # ),
    # ctrs = device('nicos.devices.vendor.qmesydaq.taco.Image',
    #     description = 'QMesyDAQ MultiChannel Detector',
    #     tacodevice = '//%s/test/qmesydaq/det' % nethost,
    # ),
    # qm_det = device('nicos.devices.generic.Detector',
    #     description = 'QMesyDAQ Detector',
    #     timers = ['timer'],
    #     monitors = ['mon1', 'mon2'],
    #     images = ['ctrs'],
    #     fileformats = [],
    #     subdir = '',
    # ),
    mon = device('nicos.devices.vendor.qmesydaq.caress.Counter',
        description = 'HWB MON',
        fmtstr = '%d',
        type = 'monitor',
        nameserver = '%s' % nameservice,
        config = 'MON 500 qmesydaq.caress_object monitor1',
        caresspath = caresspath,
        toolpath = toolpath,
        lowlevel = True,
        absdev = False,
    ),
    tim1 = device('nicos.devices.vendor.qmesydaq.caress.Timer',
        description = 'HWB TIM1',
        fmtstr = '%.2f',
        unit = 's',
        nameserver = '%s' % nameservice,
        config = 'TIM1 500 qmesydaq.caress_object timer 1',
        caresspath = caresspath,
        toolpath = toolpath,
        lowlevel = True,
        absdev = False,
    ),
    image = device('nicos.devices.vendor.qmesydaq.caress.Image',
        description = 'Image data device',
        fmtstr = '%d',
        pollinterval = None,
        nameserver = '%s' % nameservice,
        caresspath = caresspath,
        toolpath = toolpath,
        config = 'HISTOGRAM 500 qmesydaq.caress_object histogram 0 80 256',
        lowlevel = True,
        absdev = False,
        transpose = True,
    ),
    basedet = device('nicos.devices.generic.Detector',
        description = 'Classical detector with single channels',
        timers = ['tim1'],
        monitors = ['mon'],
        images = ['image'],
        pollinterval = None,
        lowlevel = True,
    ),
    adet = device('nicos_mlz.spodi.devices.detector.Detector',
        description = 'Scanning (resolution steps) detector',
        motor = 'tths',
        detector = 'basedet',
        pollinterval = None,
        maxage = 86400,
        liveinterval = 5,
    ),
    hv_det = device('nicos.devices.tango.PowerSupply',
        description = 'Detector high voltage',
        tangodevice = tango_base + 'hv/detector',
        requires = {'level': 'admin'},
    ),
    hv_det_current = device('nicos.devices.generic.ReadonlyParamDevice',
        description = 'Detector high voltage current',
        device = 'hv_det',
        parameter = 'current',
    ),
    hv_mon = device('nicos.devices.tango.PowerSupply',
        description = 'Monitor high voltage',
        tangodevice = tango_base + 'hv/monitor',
        requires = {'level': 'admin'},
    ),
    hv_mon_current = device('nicos.devices.generic.ReadonlyParamDevice',
        description = 'Monitor high voltage current',
        device = 'hv_det',
        parameter = 'current',
    ),
    histogram = device('nicos_mlz.devices.qmesydaqsinks.HistogramSink',
        description = 'Histogram data written via QMesyDAQ',
        image = 'image',
    ),
    listmode = device('nicos_mlz.devices.qmesydaqsinks.ListmodeSink',
        description = 'Listmode data written via QMesyDAQ',
        image = 'image',
    ),
    detsampledist = device('nicos.devices.generic.ManualMove',
        description = 'Distance between sample and detector',
        default = 1.117,
        abslimits = (1.117, 1.117),
        unit = 'm',
    ),
)
